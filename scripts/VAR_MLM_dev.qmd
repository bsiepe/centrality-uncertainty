---
title: "Centrality"
format: html
---

# Preparation

```{r setup, include = FALSE}
# Libraries
packages <- c(
  "tidyverse",
  "devtools",
  "rmarkdown",
  "cmdstanr",
  "bayesplot",
  "posterior",
  "here",
  "graphicalVAR",
  "cmdstanr"
)
lapply(packages, library, character.only = TRUE)

set.seed(35037)
```

### Simulate data
```{r}
# Additionally, use data from our preprint
l_graphs <- readRDS(here("data", "l_graphs.rds"))

# Choose graph 6
gvar_mod <- l_graphs$graph6

# Add partial correlations
gvar_mod$PCC <- -cov2cor(gvar_mod$kappa)
diag(gvar_mod$PCC) <- 0

# Simulate data
I <- 10
n_t <- rep(200, I)

Y <-
  lapply(1:I, function(i) {
    graphicalVAR::graphicalVARsim(nTime = n_t[i],
                                  beta = gvar_mod$beta,
                                  kappa = gvar_mod$kappa) %>%
      apply(., 2, scale)
  }) %>%
  do.call(rbind, .)

K <- ncol(Y) 
N_total <- nrow(Y)

outcome <- rnorm(I, 0, 1)
```

## Fit VAR Model in Stan
```{r stan data & compilation, renv.ignore = TRUE}
# prepare stan data
stan_data <-
  list(K = K,
       I = I,
       N_total = N_total,
       n_t = n_t,
       Y = as.array(Y),
       outcome = outcome
  )
# Choose model to fit
model_name <- "MLVAR"
# Compile model
var_lkj_model <- cmdstanr::cmdstan_model(
  stan_file = here("scripts", paste0(model_name, ".stan")),
  pedantic = TRUE#, 
  #quiet = FALSE
  )

```

```{r sampling, message=FALSE, renv.ignore=TRUE}
# number of MCMC chains
n_chains <- 4
# Run sampler
var_lkj_fit <- var_lkj_model$sample(
  data = stan_data,
  seed = 2023,
  chains = n_chains,
  parallel_chains = n_chains,
  iter_warmup = 500,
  iter_sampling = 500,
  refresh = 100,
  thin = 1,
  adapt_delta = .8,
  init = .1
)
# time to fit
var_lkj_fit$time()$total

#var_lkj_fit$output(1)
```


```{r variational, message=FALSE, renv.ignore=TRUE}
# Run sampler
var_lkj_fit <- var_lkj_model$variational(
  data = stan_data,
  seed = 2023,
  init = .1,
  adapt_engaged = FALSE,
  eta = 0.1, 
  eval_elbo = 200
)
var_lkj_fit$read_cmdstan_csv() 
```

## Effective sample size (ESS) & Rhat Plots
```{r}
# color scheme
color_scheme_set(scheme = "purple")
# Effective sample sizes
plot_neff <-
  mcmc_neff_hist(bayesplot::neff_ratio(var_lkj_fit), binwidth = .01) +
  labs(title = "A") +
  guides(color = "none", fill = "none") +
  theme(
    legend.text = element_blank(),
    legend.key = element_blank(),
    title = element_text(size = 16, face = "bold")
  )
# Rhat
# BS: Why does this have missings?
plot_rhat <-
  bayesplot::mcmc_rhat_hist(bayesplot::rhat(var_lkj_fit)) +
  labs(title = "B") +
  guides(color = "none", fill = "none") +
  theme(
    legend.text = element_blank(),
    legend.key = element_blank(),
    title = element_text(size = 16, face = "bold")
  ) +
  yaxis_text(on = TRUE)
# Combined plot
plot_diagnostics <- gridExtra::grid.arrange(plot_neff, plot_rhat, ncol = 2)
```

```{r}
#param_ests <- var_lkj_fit$summary(c("B", "Rho","mu_B","sigma_B", "sigma_theta"))
param_ests <- var_lkj_fit$summary()
```

# Parameter Recovery

### Betas
```{r renv.ignore=TRUE}
medians_beta <-
  var_lkj_fit$summary("Beta") %>% 
  dplyr::select(median) %>% 
  unlist() %>% 
  round(2) %>% 
  matrix(., nrow = K, byrow = FALSE)
cor.plot(medians_beta)

cor.plot(gvar_mod$beta
)
```

### Difference in Betas
```{r}
diff_Rho <- medians_beta - gvar_mod$beta
cor.plot(diff_Rho)
```

```{r}
draws_beta <- var_lkj_fit$draws("Beta") %>% as_draws_matrix()
bayesplot::ppc_intervals(gvar_mod$beta %>% as.vector(),draws_beta)
```

### Partial Correlations
```{r}
medians_rho <-
  var_lkj_fit$summary("Rho") %>% 
  dplyr::select(median) %>% 
  unlist() %>% 
  round(2) %>% 
  matrix(., nrow = K, byrow = FALSE)
cor.plot(medians_rho)

cor.plot(gvar_mod$PCC)

```

### Difference in partial correlations
```{r}
diff_Rho <- medians_rho - gvar_mod$PCC
cor.plot(diff_Rho)
```


```{r}
draws_rho <- var_lkj_fit$draws("Rho") %>% as_draws_matrix()
bayesplot::ppc_intervals(gvar_mod$PCC %>% as.vector(),draws_rho)
```







