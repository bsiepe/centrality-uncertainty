---
title: "Using features of dynamic networks to guide treatment selection and outcome prediction"
subtitle: "Data-Generating Processes"
author: 
 - name: Bj√∂rn S. Siepe
   orcid: 0000-0002-9558-4648
   affiliations: University of Marburg
 - name: Matthias Kloft
   orcid: 0000-0003-1845-6957
   affiliations: University of Marburg  
 - name: Fridtjof Petersen
   orcid: 0000-0002-4913-8532
   affiliations: University of Groningen
 - name: Yong Zhang
   orcid: 0000-0002-6313-2575
   affiliations: University of Groningen
 - name: Laura F. Bringmann
   orcid: 0000-0002-8091-9935
   affiliations: University of Groningen
 - name: Daniel W. Heck
   orcid: 0000-0002-6302-9252
   affiliations: University of Marburg
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    number-sections: true
    theme: cosmo
    code-fold: true
    code-tools: true
    code-summary: "Show the code"
    fig-width: 7
    fig-height: 4.5
    fig-align: "center"
    embed-resources: true
execute:
  message: false
  warning: false
  eval: false
params:
  rerun: false  # define parameter if all large analyses should be rerun
---

# Preparation

```{r}
library(tidyverse)
library(here)
set.seed(35037)
```


# Synthetic DGP based on previous simulation studies. 
We base our DGP previous sim studies (see the preregistration for more information).
```{r}
var_mat <- create_var_matrix(6, 
                          sparse = TRUE,
                          sparsity_proportion = 0.15,
                          boost_factor = 1.25)
colSums(var_mat)                            
rowSums(var_mat)

arr_to_latex(var_mat)
```




Then we can create the corresponding innovation covariance matrix:
```{r}
cov_mat <- create_cov_matrix(6, 
                             off_diag_val = .15,
                              sparse = TRUE, 
                              sparsity_proportion = 0.15,
                              boost_factor = 1.25)
colSums(cov_mat)
rowSums(cov_mat)
arr_to_latex(cov_mat)
```

Create the corresponding pcor matrix:
```{r}
pcor_mat <- -stats::cov2cor(solve(cov_mat))
```

And the corresponding precision matrix: 
```{r}
kappa_mat <- solve(cov_mat)
```


Save the DGP:
```{r}
graph_semisparse_synth <- list(beta = var_mat, 
                    sigma = cov_mat, 
                    kappa = kappa_mat,
                    pcor = pcor_mat)

saveRDS(graph_semisparse_synth, here("data/graph_semisparse_synth.RDS"))
```


