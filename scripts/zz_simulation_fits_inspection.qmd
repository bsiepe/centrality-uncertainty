---
title: "simulation_fits_inspection"
format: html
editor: visual
---

# Prep

In this file, we investigate different simulation fits

```{r}
library(tidyverse)
library(lm.beta)
```

```{r}
# data from sim run on 2024-04-09
sim_res_4 <- readRDS("~/centrality-uncertainty/scripts/SimDesign-results_pc04798_2/results-row-4.rds")
```

# Analyze bmlVAR

Compare contemporaneous fits, which seemed off:

```{r}
ut <- function(x){
  x[upper.tri(x)]
}

sim_res_4$results[[1]]$bmlvar$fit_bmlvar$pcor[[2]]
ut(sim_res_4$results[[1]]$pcor[[2]])

```

## Regression outcomes

```{r}
sim_res_4$results[[1]]$bmlvar$reg_bmlvar$regression_slope$median
```

Plot them all (first need to account for the weird data structure where the results are a vector of length 9)

```{r}
slopes <- lapply(sim_res_4$results, function(x){
  tmp <- x$bmlvar$reg_bmlvar$regression_slope$median
  df_slopes <- data.frame(
    # true coefficients
    zero = tmp[c(1,4,7)],
    two = tmp[c(2,5,8)],
    four = tmp[c(3,6,9)]
  )
  df_slopes
})


slopes %>% 
  bind_rows() %>% 
  pivot_longer(cols = everything(), 
               names_to = "reg_coef") %>% 
  mutate(reg_coef = as.factor(reg_coef)) %>% 
  ggplot(aes(x = reg_coef, y = value)) + 
  geom_point()

```

# Analyze other models

## graphicalVAR

### Regression outcomes

```{r}
l_coefs <- list()
l_coefs$zero <- vector()
l_coefs$two <- vector()
l_coefs$four <- vector()

for(i in 1:2){
  l_coefs$zero[i] <- lm.beta(sim_res_4$results[[i]]$gvar$reg_tempdens[[1]])$standardized.coefficients[2]
  l_coefs$two[i] <- lm.beta(sim_res_4$results[[i]]$gvar$reg_tempdens[[2]])$standardized.coefficients[2]
  l_coefs$four[i] <- lm.beta(sim_res_4$results[[i]]$gvar$reg_tempdens[[3]])$standardized.coefficients[2]
}

l_coefs %>% 
  dplyr::bind_rows(., .id = "true_coef") %>% 
    pivot_longer(cols = everything(), 
               names_to = "reg_coef") %>% 
  mutate(reg_coef = as.factor(reg_coef)) %>% 
  ggplot(aes(x = reg_coef, y = value)) + 
  geom_point()

```

## mlVAR

### Network Estimation

Calculate average difference

```{r}
# Temporal Network
Reduce("+", Map("abs", Map("-", sim_res_4$results[[1]]$mlvar$fit_mlvar$beta,sim_res_4$results[[1]]$beta))) / 200

# Contemporaneous Network
Reduce("+", Map("abs", Map("-", sim_res_4$results[[1]]$mlvar$fit_mlvar$pcor,sim_res_4$results[[1]]$pcor))) / 200
```

### Centrality

Somehow, the rank correlation for mlVAR is quite bad. Plot some examples:

```{r}
df_denstemp <- data.frame(
  mlvar_denstemp = sim_res_4$results[[2]]$mlvar$dens_temp,
  true_denstemp =  unlist(sim_res_4$results[[2]]$true_cent$dens_temp)
)

df_denstemp %>% 
  ggplot(aes(x = true_denstemp, y = mlvar_denstemp)) + 
  geom_point() + 
  geom_smooth()
```

### Regression outcomes

```{r}
l_coefs <- list()
l_coefs$zero <- vector()
l_coefs$two <- vector()
l_coefs$four <- vector()

for(i in 1:2){
  l_coefs$zero[i] <- lm.beta(sim_res_4$results[[i]]$mlvar$reg_tempdens[[1]])$standardized.coefficients[2]
  l_coefs$two[i] <- lm.beta(sim_res_4$results[[i]]$mlvar$reg_tempdens[[2]])$standardized.coefficients[2]
  l_coefs$four[i] <- lm.beta(sim_res_4$results[[i]]$mlvar$reg_tempdens[[3]])$standardized.coefficients[2]
}

l_coefs %>% 
  dplyr::bind_rows(., .id = "true_coef") %>% 
    pivot_longer(cols = everything(), 
               names_to = "reg_coef") %>% 
  mutate(reg_coef = as.factor(reg_coef)) %>% 
  ggplot(aes(x = reg_coef, y = value)) + 
  geom_point()

```


## GIMME

### Regression Outcomes

```{r}
l_coefs <- list()
l_coefs$zero <- vector()
l_coefs$two <- vector()
l_coefs$four <- vector()

for(i in 1:2){
  l_coefs$zero[i] <- lm.beta(sim_res_4$results[[i]]$gimme$reg_tempdens[[1]])$standardized.coefficients[2]
  l_coefs$two[i] <- lm.beta(sim_res_4$results[[i]]$gimme$reg_tempdens[[2]])$standardized.coefficients[2]
  l_coefs$four[i] <- lm.beta(sim_res_4$results[[i]]$gimme$reg_tempdens[[3]])$standardized.coefficients[2]
}

l_coefs %>% 
  dplyr::bind_rows(., .id = "true_coef") %>% 
    pivot_longer(cols = everything(), 
               names_to = "reg_coef") %>% 
  mutate(reg_coef = as.factor(reg_coef)) %>% 
  ggplot(aes(x = reg_coef, y = value)) + 
  geom_point()
```

