---
title: "Centrality"
format: html
---

# Preparation

```{r setup, include = FALSE}
# Libraries
library(tidyverse)
library(rmarkdown)
library(graphicalVAR)
library(mlVAR)
library(parallel)
library(here)
library(broom)
library(gimme)
library(cmdstanr)
library(bayesplot)
library(posterior)
library(gridExtra)
library(psych)
```

```{r sim-data}
# Choose model to fit
model_name <- "MLVAR"
# Compile model
mlvar_model <-
  cmdstanr::cmdstan_model(stan_file = here("scripts", "models", paste0(model_name, ".stan")))
  
fit_mlvar_stan <- function(response_data,
                           regression_outcome,
                           n_person,
                           n_var,
                           n_timepoints,
                           n_chains,
                           n_cores,
                           # "variational" or "sampling"
                           method = "variational",
                           stan_model_compiled = mlvar_model
                           ) {
  I <- n_person
  K <- n_var
  n_pc <-  K * (K - 1) / 2
  idx_rho <- upper.tri(matrix(1, K, K, byrow = F)) %>%
    c() %>%
    which(.)
  n_t <- rep(n_timepoints, I)
  
  # Response data for Stan
  Y <- do.call(rbind, response_data) %>%
    select(-ID) %>%
    as.matrix()
  
  # prepare stan data
  stan_data <-
    list(
      K = K,
      I = I,
      N_total = nrow(Y),
      n_t = n_t,
      n_pc = n_pc,
      idx_rho = idx_rho,
      Y = Y,
      outcome = regression_outcome
    )
  
  # fit model
  # MCMC
  if (method == "sampling") {
    # Run sampler
    mlvar_fit <- mlvar_model$sample(
      data = stan_data,
      chains = n_chains,
      parallel_chains = n_cores,
      iter_warmup = 500,
      iter_sampling = 500,
      refresh = 100,
      thin = 1,
      adapt_delta = .9,
      init = .1
    )
  }
  # variational Bayes
  if (method == "variational") {
    # Run variational
    mlvar_fit <- mlvar_model$variational(
      data = stan_data,
      init = .1,
      adapt_engaged = FALSE,
      eta = 0.1,
      eval_elbo = 200
    )
  }
  return(mlvar_fit)
}
```